name: Deploy to Azure Staging and Production

on:
  release:
    types: [published]

permissions:
  contents: write  # Required for gh CLI to trigger workflows
  actions: write   # Recommended if triggering other workflows

jobs:
  deploy-if-release:
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract version from build.gradle
        id: get_version
        run: |
          VERSION=$(grep '^version\s*=' app/build.gradle | sed 's/version\s*=\s*["'\'']\([^"'\'']*\)["'\'']/\1/')
          CLEAN_VERSION=$(echo "$VERSION" | sed 's/-SNAPSHOT//')
          echo "Full version: $VERSION"
          echo "Release version: $CLEAN_VERSION"
          echo "image_tag=v$CLEAN_VERSION" >> $GITHUB_OUTPUT

      - name: Trigger Testing Deployment
        run: |
          gh workflow run deploy-to-azure-vm.yml \
            --ref "main" \
            -f environment=Production \
            -f imageTag=${{ steps.get_version.outputs.image_tag }}
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  deploy-if-prerelease:
    if: github.event.release.prerelease == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract version from build.gradle
        id: get_version
        run: |
          VERSION=$(grep '^version\s*=' app/build.gradle | sed 's/version\s*=\s*["'\'']\([^"'\'']*\)["'\'']/\1/')
          echo "Detected version: $VERSION"
          echo "image_tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Trigger Testing Deployment
        run: |
          gh workflow run deploy-to-azure-vm.yml \
            --ref "main" \
            -f environment=Staging \
            -f imageTag=${{ steps.get_version.outputs.image_tag }}
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}