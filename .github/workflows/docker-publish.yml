# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build and Push Docker Image

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push-docker-hub:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image to Docker Hub
        run: ./gradlew jib
        env:
          _JIB_GRADLE_IMAGE_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          _JIB_GRADLE_IMAGE_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from build.gradle
        id: get_version
        run: |
          VERSION=$(grep '^version\s*=' app/build.gradle | sed 's/version\s*=\s*["'\'']\([^"'\'']*\)["'\'']/\1/')
          echo "Detected version: $VERSION"
          echo "image_tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/jothikaaravindhan/cost-optimization-operator:${{ steps.get_version.outputs.image_tag }}'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          format: 'template'
          hide-progress: false
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'