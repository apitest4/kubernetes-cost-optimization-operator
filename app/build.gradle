/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id("java")
    id("application")
    id("com.google.cloud.tools.jib") version "3.4.5"
}

group = "org.jothika.costoperator"
version = "0.1.0-SNAPSHOT"

ext {
    javaVersion = JavaVersion.VERSION_21
    josdkVersion = "5.0.4"
    slf4jVersion = "1.7.36"
    log4jVersion = "2.20.0"
    junitVersion = "5.9.2"
    fabric8Version = "7.1.0"
}

repositories {
    mavenCentral()
}

dependencies {
    // Java Operator SDK
    implementation("io.javaoperatorsdk:operator-framework:$josdkVersion")

    // Operator SDK JUnit 5 support
    testImplementation("io.javaoperatorsdk:operator-framework-junit-5:$josdkVersion")

    // Logging
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("org.apache.logging.log4j:log4j-slf4j2-impl:$log4jVersion")
    implementation("org.apache.logging.log4j:log4j-core:$log4jVersion")

    // JUnit
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")

    // CRD generation (runtime dependencies)
    implementation("io.fabric8:crd-generator-apt:$fabric8Version")
    annotationProcessor("io.fabric8:crd-generator-apt:$fabric8Version")
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

application {
    mainClass.set("org.jothika.costoperator.Runner")
}

tasks.test {
    useJUnitPlatform()
}

// Copy the generated crds from build folder to app crds folder
// This task can be executed from command line as follows "gradle copyCrds"
tasks.register('copyCrds', Copy) {
    from layout.getBuildDirectory().dir("classes/java/main/META-INF/fabric8")
    into layout.getProjectDirectory().dir("crds")
}

// Run the copycrds task after the build is completed
tasks.named("build") {
    finalizedBy("copyCrds")
}


// Jib configuration
jib {
    from {
        image = "eclipse-temurin:21-jdk"
        platforms {
                platform {
                    architecture = 'amd64'
                    os = 'linux'
                }
                platform {
                    architecture = 'arm64'
                    os = 'linux'
                }
        }
    }
    to {
        image = "jothikaaravindhan/cost-optimization-operator"
    }
    container {
        mainClass = "org.jothika.costoperator.Runner"
        creationTime = "USE_CURRENT_TIMESTAMP"
    }
}